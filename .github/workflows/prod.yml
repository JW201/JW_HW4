name: cd-prod

on:
  push:
    branches: [ "prod" ]

env:
  IMAGE_NAME: ${{ secrets.DOCKERHUB_USERNAME }}/sayhi
  OUTPUT_DIR: "/opt/assignment_outputs"

jobs:
  build-push-deploy:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Setup Python
        uses: actions/setup-python@v5
        with:
          python-version: "3.11"

      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          if [ -f requirements.txt ]; then pip install -r requirements.txt; fi

      - name: Lint with pylint (non-blocking)
        run: pylint app.py || true
        continue-on-error: true

      - name: Type check with mypy (non-blocking)
        run: mypy app.py || true
        continue-on-error: true

      - name: Run tests
        run: pytest -q

      - name: Login to Docker Hub
        uses: docker/login-action@v3
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}

      - name: Build & Push image
        uses: docker/build-push-action@v6
        with:
          context: .
          push: true
          tags: |
            ${{ env.IMAGE_NAME }}:latest
            ${{ env.IMAGE_NAME }}:${{ github.sha }}

      - name: Deploy to server via SSH and run container
        uses: appleboy/ssh-action@v1.0.3
        with:
          host: ${{ secrets.DO_HOST }}
          username: ${{ secrets.DO_USER }}
          key: ${{ secrets.DO_SSH_PRIVATE_KEY }}
          port: ${{ secrets.DO_PORT || '22' }}
          script_stop: true
          script: |
            set -euo pipefail
            docker pull ${{ env.IMAGE_NAME }}:latest
            docker run --rm \
              -e OUTPUT_DIR="${{ env.OUTPUT_DIR }}" \
              -v ${{ env.OUTPUT_DIR }}:/app/data \
              ${{ env.IMAGE_NAME }}:latest
            docker image prune -f
